name: Tests

on:
  push:
    branch: [ master, development ]
    paths-ignore:
      - 'src/**'
      - 'scripts/**'
  pull_request:
    branch: [ master, development ]

defaults:
  run:
    working-directory: web

jobs:
  build:

    runs-on: ubuntu-latest
    container: node:12.16.3-stretch

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:10.12
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Install deps
      run: |
        npm ci
        cd .. && npm ci

    - name: Initialize database
      run: cd .. && npm run migrate:up

    - name: Run jest and generate coverage
      run: npm run test:ci

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        flags: frontend
        name: Frontend coverage

    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      PGPASSWORD: postgres

      REDIS_HOST: redis
      REDIS_PORT: 6379
      DEBUG: debug,session-*,auth-info
      TZ: UTC
