// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Root component should render correctly Should render with empty input 1`] = `<div />`;

exports[`Root component should render correctly Should render with empty input and correct status code 1`] = `
<div
  className="makeStyles-root-1"
>
  <div
    className="makeStyles-root-6"
  >
    <header
      className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
    >
      <div
        className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
      >
        <h6
          className="MuiTypography-root makeStyles-title-8 MuiTypography-h6 MuiTypography-noWrap"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Manga tracker
        </h6>
        <a
          href="/"
          onClick={[Function]}
          onMouseEnter={[Function]}
          style={
            Object {
              "color": "inherit",
              "textDecoration": "none",
            }
          }
        >
          <button
            aria-controls="menu-appbar"
            aria-label="return to home page"
            className="MuiButtonBase-root MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
            disabled={false}
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <span
              className="MuiIconButton-label"
            >
              <svg
                aria-hidden={true}
                className="MuiSvgIcon-root"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                />
              </svg>
            </span>
          </button>
        </a>
        <div
          className="makeStyles-grow-7"
        />
        <div
          aria-expanded={false}
          aria-owns={null}
          className="MuiAutocomplete-root makeStyles-search-15 MuiAutocomplete-fullWidth MuiAutocomplete-hasClearIcon"
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="combobox"
        >
          <div
            aria-label="Manga search"
            className="MuiInputBase-root makeStyles-inputRoot-16 MuiInputBase-adornedEnd"
            onClick={[Function]}
          >
            <input
              aria-activedescendant={null}
              aria-autocomplete="list"
              aria-controls={null}
              autoCapitalize="none"
              autoComplete="off"
              className="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
              disabled={false}
              id="title-search"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              placeholder="Search manga"
              spellCheck="false"
              type="text"
              value=""
            />
            <button
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                  />
                </svg>
              </span>
            </button>
          </div>
        </div>
        <button
          className="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-loginButton-11"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            Login
          </span>
        </button>
        <button
          aria-label="Switch theme"
          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
              />
            </svg>
          </span>
        </button>
      </div>
    </header>
  </div>
  <div />
  <div
    className="makeStyles-container-2"
  >
    <footer
      className="makeStyles-footer-4"
    >
      <hr
        className="MuiDivider-root makeStyles-divider-3 MuiDivider-middle"
      />
      <p
        className="MuiTypography-root makeStyles-copyright-5 MuiTypography-body1"
      >
        Copyright Â© 
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
          href="https://github.com/s0hv"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          s0hv
        </a>
         
        2020
        .
      </p>
    </footer>
  </div>
</div>
`;

exports[`Root component should render correctly should render correctly with data 1`] = `
<Layout
  activeTheme={1}
  setTheme={[Function]}
  statusCode={200}
>
  <div
    className="makeStyles-root-1"
  >
    <TopBar
      activeTheme={1}
      setTheme={[Function]}
    >
      <div
        className="makeStyles-root-6"
      >
        <WithStyles(ForwardRef(AppBar))
          position="static"
        >
          <ForwardRef(AppBar)
            classes={
              Object {
                "colorDefault": "MuiAppBar-colorDefault",
                "colorInherit": "MuiAppBar-colorInherit",
                "colorPrimary": "MuiAppBar-colorPrimary",
                "colorSecondary": "MuiAppBar-colorSecondary",
                "colorTransparent": "MuiAppBar-colorTransparent",
                "positionAbsolute": "MuiAppBar-positionAbsolute",
                "positionFixed": "MuiAppBar-positionFixed",
                "positionRelative": "MuiAppBar-positionRelative",
                "positionStatic": "MuiAppBar-positionStatic",
                "positionSticky": "MuiAppBar-positionSticky",
                "root": "MuiAppBar-root",
              }
            }
            position="static"
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
              component="header"
              elevation={4}
              square={true}
            >
              <ForwardRef(Paper)
                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                component="header"
                elevation={4}
                square={true}
              >
                <header
                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                >
                  <WithStyles(ForwardRef(Toolbar))>
                    <ForwardRef(Toolbar)
                      classes={
                        Object {
                          "dense": "MuiToolbar-dense",
                          "gutters": "MuiToolbar-gutters",
                          "regular": "MuiToolbar-regular",
                          "root": "MuiToolbar-root",
                        }
                      }
                    >
                      <div
                        className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                      >
                        <Link
                          href="/"
                          prefetch={false}
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="makeStyles-title-8"
                            noWrap={true}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            variant="h6"
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-title-8"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              noWrap={true}
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              variant="h6"
                            >
                              <h6
                                className="MuiTypography-root makeStyles-title-8 MuiTypography-h6 MuiTypography-noWrap"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                              >
                                Manga tracker
                              </h6>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </Link>
                        <ForwardRef
                          Component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "color": [Function],
                                  "disableFocusRipple": [Function],
                                  "disableRipple": [Function],
                                  "disabled": [Function],
                                  "edge": [Function],
                                  "size": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(IconButton))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiIconButton",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          aria-controls="menu-appbar"
                          aria-label="return to home page"
                          className="makeStyles-titleIcon-9"
                          color="inherit"
                          href="/"
                          prefetch={false}
                        >
                          <Link
                            href="/"
                            passHref={false}
                            prefetch={false}
                          >
                            <a
                              href="/"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              style={
                                Object {
                                  "color": "inherit",
                                  "textDecoration": "none",
                                }
                              }
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-controls="menu-appbar"
                                aria-label="return to home page"
                                className="makeStyles-titleIcon-9"
                                color="inherit"
                              >
                                <ForwardRef(IconButton)
                                  aria-controls="menu-appbar"
                                  aria-label="return to home page"
                                  className="makeStyles-titleIcon-9"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="inherit"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="menu-appbar"
                                    aria-label="return to home page"
                                    centerRipple={true}
                                    className="MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                    disabled={false}
                                    focusRipple={true}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="menu-appbar"
                                      aria-label="return to home page"
                                      centerRipple={true}
                                      className="MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                    >
                                      <button
                                        aria-controls="menu-appbar"
                                        aria-label="return to home page"
                                        className="MuiButtonBase-root MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(HomeIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(HomeIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </a>
                          </Link>
                        </ForwardRef>
                        <div
                          className="makeStyles-grow-7"
                        />
                        <MangaSearch
                          id="title-search"
                          placeholder="Search manga"
                        >
                          <WithStyles(ForwardRef(Autocomplete))
                            PopperComponent={[Function]}
                            classes={
                              Object {
                                "popper": "makeStyles-popper-18",
                                "root": "makeStyles-search-15",
                              }
                            }
                            clearOnBlur={false}
                            filterOptions={[Function]}
                            freeSolo={true}
                            fullWidth={true}
                            getOptionLabel={[Function]}
                            id="title-search"
                            openOnFocus={true}
                            options={Array []}
                            renderInput={[Function]}
                            renderOption={[Function]}
                          >
                            <ForwardRef(Autocomplete)
                              PopperComponent={[Function]}
                              classes={
                                Object {
                                  "clearIndicator": "MuiAutocomplete-clearIndicator",
                                  "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                  "endAdornment": "MuiAutocomplete-endAdornment",
                                  "focused": "Mui-focused",
                                  "fullWidth": "MuiAutocomplete-fullWidth",
                                  "groupLabel": "MuiAutocomplete-groupLabel",
                                  "groupUl": "MuiAutocomplete-groupUl",
                                  "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                  "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                  "input": "MuiAutocomplete-input",
                                  "inputFocused": "MuiAutocomplete-inputFocused",
                                  "inputRoot": "MuiAutocomplete-inputRoot",
                                  "listbox": "MuiAutocomplete-listbox",
                                  "loading": "MuiAutocomplete-loading",
                                  "noOptions": "MuiAutocomplete-noOptions",
                                  "option": "MuiAutocomplete-option",
                                  "paper": "MuiAutocomplete-paper",
                                  "popper": "MuiAutocomplete-popper makeStyles-popper-18",
                                  "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                  "popupIndicator": "MuiAutocomplete-popupIndicator",
                                  "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                  "root": "MuiAutocomplete-root makeStyles-search-15",
                                  "tag": "MuiAutocomplete-tag",
                                  "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                }
                              }
                              clearOnBlur={false}
                              filterOptions={[Function]}
                              freeSolo={true}
                              fullWidth={true}
                              getOptionLabel={[Function]}
                              id="title-search"
                              openOnFocus={true}
                              options={Array []}
                              renderInput={[Function]}
                              renderOption={[Function]}
                            >
                              <div
                                aria-expanded={false}
                                aria-owns={null}
                                className="MuiAutocomplete-root makeStyles-search-15 MuiAutocomplete-fullWidth MuiAutocomplete-hasClearIcon"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="combobox"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  aria-label="Manga search"
                                  classes={
                                    Object {
                                      "input": "makeStyles-inputInput-17",
                                      "root": "makeStyles-inputRoot-16",
                                    }
                                  }
                                  endAdornment={
                                    <WithStyles(ForwardRef(IconButton))>
                                      <Memo />
                                    </WithStyles(ForwardRef(IconButton))>
                                  }
                                  inputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "autoCapitalize": "none",
                                      "autoComplete": "off",
                                      "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                      "disabled": false,
                                      "id": "title-search",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "onMouseDown": [Function],
                                      "ref": Object {
                                        "current": <input
                                          aria-autocomplete="list"
                                          autocapitalize="none"
                                          autocomplete="off"
                                          class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                          id="title-search"
                                          placeholder="Search manga"
                                          spellcheck="false"
                                          type="text"
                                          value=""
                                        />,
                                      },
                                      "spellCheck": "false",
                                      "value": "",
                                    }
                                  }
                                  onChange={[Function]}
                                  placeholder="Search manga"
                                >
                                  <ForwardRef(InputBase)
                                    aria-label="Manga search"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "formControl": "MuiInputBase-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth",
                                        "input": "MuiInputBase-input makeStyles-inputInput-17",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline",
                                        "root": "MuiInputBase-root makeStyles-inputRoot-16",
                                      }
                                    }
                                    endAdornment={
                                      <WithStyles(ForwardRef(IconButton))>
                                        <Memo />
                                      </WithStyles(ForwardRef(IconButton))>
                                    }
                                    inputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "autoCapitalize": "none",
                                        "autoComplete": "off",
                                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                        "disabled": false,
                                        "id": "title-search",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "onMouseDown": [Function],
                                        "ref": Object {
                                          "current": <input
                                            aria-autocomplete="list"
                                            autocapitalize="none"
                                            autocomplete="off"
                                            class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                            id="title-search"
                                            placeholder="Search manga"
                                            spellcheck="false"
                                            type="text"
                                            value=""
                                          />,
                                        },
                                        "spellCheck": "false",
                                        "value": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    placeholder="Search manga"
                                  >
                                    <div
                                      aria-label="Manga search"
                                      className="MuiInputBase-root makeStyles-inputRoot-16 MuiInputBase-adornedEnd"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-activedescendant={null}
                                        aria-autocomplete="list"
                                        aria-controls={null}
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        className="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                        disabled={false}
                                        id="title-search"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        placeholder="Search manga"
                                        spellCheck="false"
                                        type="text"
                                        value=""
                                      />
                                      <WithStyles(ForwardRef(IconButton))>
                                        <ForwardRef(IconButton)
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <ForwardRef(SearchIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(SearchIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </div>
                            </ForwardRef(Autocomplete)>
                          </WithStyles(ForwardRef(Autocomplete))>
                        </MangaSearch>
                        <Link
                          href="/login"
                          prefetch={false}
                        >
                          <WithStyles(ForwardRef(Button))
                            className="makeStyles-loginButton-11"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            variant="outlined"
                          >
                            <ForwardRef(Button)
                              className="makeStyles-loginButton-11"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              variant="outlined"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-outlined makeStyles-loginButton-11"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-outlined makeStyles-loginButton-11"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  onMouseEnter={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-loginButton-11"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      Login
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Link>
                        <WithStyles(ForwardRef(IconButton))
                          aria-label="Switch theme"
                          color="inherit"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            aria-label="Switch theme"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-label="Switch theme"
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                aria-label="Switch theme"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  aria-label="Switch theme"
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef(Brightness3Icon)
                                      className="makeStyles-menuItemIcon-13"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="makeStyles-menuItemIcon-13"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="makeStyles-menuItemIcon-13"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(Brightness3Icon)>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                    </ForwardRef(Toolbar)>
                  </WithStyles(ForwardRef(Toolbar))>
                </header>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </ForwardRef(AppBar)>
        </WithStyles(ForwardRef(AppBar))>
      </div>
    </TopBar>
    <DummyComponent>
      <div />
    </DummyComponent>
    <div
      className="makeStyles-container-2"
    >
      <footer
        className="makeStyles-footer-4"
      >
        <WithStyles(ForwardRef(Divider))
          className="makeStyles-divider-3"
          variant="middle"
        >
          <ForwardRef(Divider)
            className="makeStyles-divider-3"
            classes={
              Object {
                "absolute": "MuiDivider-absolute",
                "flexItem": "MuiDivider-flexItem",
                "inset": "MuiDivider-inset",
                "light": "MuiDivider-light",
                "middle": "MuiDivider-middle",
                "root": "MuiDivider-root",
                "vertical": "MuiDivider-vertical",
              }
            }
            variant="middle"
          >
            <hr
              className="MuiDivider-root makeStyles-divider-3 MuiDivider-middle"
            />
          </ForwardRef(Divider)>
        </WithStyles(ForwardRef(Divider))>
        <Copyright
          className="makeStyles-copyright-5"
        >
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-copyright-5"
          >
            <ForwardRef(Typography)
              className="makeStyles-copyright-5"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-copyright-5 MuiTypography-body1"
              >
                Copyright Â© 
                <WithStyles(ForwardRef(Link))
                  color="inherit"
                  href="https://github.com/s0hv"
                >
                  <ForwardRef(Link)
                    classes={
                      Object {
                        "button": "MuiLink-button",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiLink-root",
                        "underlineAlways": "MuiLink-underlineAlways",
                        "underlineHover": "MuiLink-underlineHover",
                        "underlineNone": "MuiLink-underlineNone",
                      }
                    }
                    color="inherit"
                    href="https://github.com/s0hv"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiLink-root MuiLink-underlineHover"
                      color="inherit"
                      component="a"
                      href="https://github.com/s0hv"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      variant="inherit"
                    >
                      <ForwardRef(Typography)
                        className="MuiLink-root MuiLink-underlineHover"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="inherit"
                        component="a"
                        href="https://github.com/s0hv"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        variant="inherit"
                      >
                        <a
                          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
                          href="https://github.com/s0hv"
                          onBlur={[Function]}
                          onFocus={[Function]}
                        >
                          s0hv
                        </a>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </ForwardRef(Link)>
                </WithStyles(ForwardRef(Link))>
                 
                2020
                .
              </p>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </Copyright>
      </footer>
    </div>
  </div>
</Layout>
`;

exports[`Root component should render correctly should render correctly with user 1`] = `
<Layout
  activeTheme={1}
  setTheme={[Function]}
  statusCode={200}
>
  <div
    className="makeStyles-root-1"
  >
    <TopBar
      activeTheme={1}
      setTheme={[Function]}
    >
      <div
        className="makeStyles-root-6"
      >
        <WithStyles(ForwardRef(AppBar))
          position="static"
        >
          <ForwardRef(AppBar)
            classes={
              Object {
                "colorDefault": "MuiAppBar-colorDefault",
                "colorInherit": "MuiAppBar-colorInherit",
                "colorPrimary": "MuiAppBar-colorPrimary",
                "colorSecondary": "MuiAppBar-colorSecondary",
                "colorTransparent": "MuiAppBar-colorTransparent",
                "positionAbsolute": "MuiAppBar-positionAbsolute",
                "positionFixed": "MuiAppBar-positionFixed",
                "positionRelative": "MuiAppBar-positionRelative",
                "positionStatic": "MuiAppBar-positionStatic",
                "positionSticky": "MuiAppBar-positionSticky",
                "root": "MuiAppBar-root",
              }
            }
            position="static"
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
              component="header"
              elevation={4}
              square={true}
            >
              <ForwardRef(Paper)
                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                component="header"
                elevation={4}
                square={true}
              >
                <header
                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                >
                  <WithStyles(ForwardRef(Toolbar))>
                    <ForwardRef(Toolbar)
                      classes={
                        Object {
                          "dense": "MuiToolbar-dense",
                          "gutters": "MuiToolbar-gutters",
                          "regular": "MuiToolbar-regular",
                          "root": "MuiToolbar-root",
                        }
                      }
                    >
                      <div
                        className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                      >
                        <Link
                          href="/"
                          prefetch={false}
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="makeStyles-title-8"
                            noWrap={true}
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            variant="h6"
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-title-8"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              noWrap={true}
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              variant="h6"
                            >
                              <h6
                                className="MuiTypography-root makeStyles-title-8 MuiTypography-h6 MuiTypography-noWrap"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                              >
                                Manga tracker
                              </h6>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </Link>
                        <ForwardRef
                          Component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "color": [Function],
                                  "disableFocusRipple": [Function],
                                  "disableRipple": [Function],
                                  "disabled": [Function],
                                  "edge": [Function],
                                  "size": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(IconButton))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiIconButton",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          aria-controls="menu-appbar"
                          aria-label="return to home page"
                          className="makeStyles-titleIcon-9"
                          color="inherit"
                          href="/"
                          prefetch={false}
                        >
                          <Link
                            href="/"
                            passHref={false}
                            prefetch={false}
                          >
                            <a
                              href="/"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              style={
                                Object {
                                  "color": "inherit",
                                  "textDecoration": "none",
                                }
                              }
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-controls="menu-appbar"
                                aria-label="return to home page"
                                className="makeStyles-titleIcon-9"
                                color="inherit"
                              >
                                <ForwardRef(IconButton)
                                  aria-controls="menu-appbar"
                                  aria-label="return to home page"
                                  className="makeStyles-titleIcon-9"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="inherit"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="menu-appbar"
                                    aria-label="return to home page"
                                    centerRipple={true}
                                    className="MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                    disabled={false}
                                    focusRipple={true}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="menu-appbar"
                                      aria-label="return to home page"
                                      centerRipple={true}
                                      className="MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                    >
                                      <button
                                        aria-controls="menu-appbar"
                                        aria-label="return to home page"
                                        className="MuiButtonBase-root MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(HomeIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(HomeIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </a>
                          </Link>
                        </ForwardRef>
                        <div
                          className="makeStyles-grow-7"
                        />
                        <MangaSearch
                          id="title-search"
                          placeholder="Search manga"
                        >
                          <WithStyles(ForwardRef(Autocomplete))
                            PopperComponent={[Function]}
                            classes={
                              Object {
                                "popper": "makeStyles-popper-18",
                                "root": "makeStyles-search-15",
                              }
                            }
                            clearOnBlur={false}
                            filterOptions={[Function]}
                            freeSolo={true}
                            fullWidth={true}
                            getOptionLabel={[Function]}
                            id="title-search"
                            openOnFocus={true}
                            options={Array []}
                            renderInput={[Function]}
                            renderOption={[Function]}
                          >
                            <ForwardRef(Autocomplete)
                              PopperComponent={[Function]}
                              classes={
                                Object {
                                  "clearIndicator": "MuiAutocomplete-clearIndicator",
                                  "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                  "endAdornment": "MuiAutocomplete-endAdornment",
                                  "focused": "Mui-focused",
                                  "fullWidth": "MuiAutocomplete-fullWidth",
                                  "groupLabel": "MuiAutocomplete-groupLabel",
                                  "groupUl": "MuiAutocomplete-groupUl",
                                  "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                  "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                  "input": "MuiAutocomplete-input",
                                  "inputFocused": "MuiAutocomplete-inputFocused",
                                  "inputRoot": "MuiAutocomplete-inputRoot",
                                  "listbox": "MuiAutocomplete-listbox",
                                  "loading": "MuiAutocomplete-loading",
                                  "noOptions": "MuiAutocomplete-noOptions",
                                  "option": "MuiAutocomplete-option",
                                  "paper": "MuiAutocomplete-paper",
                                  "popper": "MuiAutocomplete-popper makeStyles-popper-18",
                                  "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                  "popupIndicator": "MuiAutocomplete-popupIndicator",
                                  "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                  "root": "MuiAutocomplete-root makeStyles-search-15",
                                  "tag": "MuiAutocomplete-tag",
                                  "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                }
                              }
                              clearOnBlur={false}
                              filterOptions={[Function]}
                              freeSolo={true}
                              fullWidth={true}
                              getOptionLabel={[Function]}
                              id="title-search"
                              openOnFocus={true}
                              options={Array []}
                              renderInput={[Function]}
                              renderOption={[Function]}
                            >
                              <div
                                aria-expanded={false}
                                aria-owns={null}
                                className="MuiAutocomplete-root makeStyles-search-15 MuiAutocomplete-fullWidth MuiAutocomplete-hasClearIcon"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="combobox"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  aria-label="Manga search"
                                  classes={
                                    Object {
                                      "input": "makeStyles-inputInput-17",
                                      "root": "makeStyles-inputRoot-16",
                                    }
                                  }
                                  endAdornment={
                                    <WithStyles(ForwardRef(IconButton))>
                                      <Memo />
                                    </WithStyles(ForwardRef(IconButton))>
                                  }
                                  inputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "autoCapitalize": "none",
                                      "autoComplete": "off",
                                      "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                      "disabled": false,
                                      "id": "title-search",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "onMouseDown": [Function],
                                      "ref": Object {
                                        "current": <input
                                          aria-autocomplete="list"
                                          autocapitalize="none"
                                          autocomplete="off"
                                          class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                          id="title-search"
                                          placeholder="Search manga"
                                          spellcheck="false"
                                          type="text"
                                          value=""
                                        />,
                                      },
                                      "spellCheck": "false",
                                      "value": "",
                                    }
                                  }
                                  onChange={[Function]}
                                  placeholder="Search manga"
                                >
                                  <ForwardRef(InputBase)
                                    aria-label="Manga search"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "formControl": "MuiInputBase-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth",
                                        "input": "MuiInputBase-input makeStyles-inputInput-17",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline",
                                        "root": "MuiInputBase-root makeStyles-inputRoot-16",
                                      }
                                    }
                                    endAdornment={
                                      <WithStyles(ForwardRef(IconButton))>
                                        <Memo />
                                      </WithStyles(ForwardRef(IconButton))>
                                    }
                                    inputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "autoCapitalize": "none",
                                        "autoComplete": "off",
                                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                        "disabled": false,
                                        "id": "title-search",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "onMouseDown": [Function],
                                        "ref": Object {
                                          "current": <input
                                            aria-autocomplete="list"
                                            autocapitalize="none"
                                            autocomplete="off"
                                            class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                            id="title-search"
                                            placeholder="Search manga"
                                            spellcheck="false"
                                            type="text"
                                            value=""
                                          />,
                                        },
                                        "spellCheck": "false",
                                        "value": "",
                                      }
                                    }
                                    onChange={[Function]}
                                    placeholder="Search manga"
                                  >
                                    <div
                                      aria-label="Manga search"
                                      className="MuiInputBase-root makeStyles-inputRoot-16 MuiInputBase-adornedEnd"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-activedescendant={null}
                                        aria-autocomplete="list"
                                        aria-controls={null}
                                        autoCapitalize="none"
                                        autoComplete="off"
                                        className="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                        disabled={false}
                                        id="title-search"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        placeholder="Search manga"
                                        spellCheck="false"
                                        type="text"
                                        value=""
                                      />
                                      <WithStyles(ForwardRef(IconButton))>
                                        <ForwardRef(IconButton)
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <ForwardRef(SearchIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(SearchIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </div>
                            </ForwardRef(Autocomplete)>
                          </WithStyles(ForwardRef(Autocomplete))>
                        </MangaSearch>
                        <div
                          className="makeStyles-profileIcon-10"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-controls="menu-appbar"
                            aria-haspopup="true"
                            aria-label="account of current user"
                            color="inherit"
                            onClick={[Function]}
                          >
                            <ForwardRef(IconButton)
                              aria-controls="menu-appbar"
                              aria-haspopup="true"
                              aria-label="account of current user"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-controls="menu-appbar"
                                aria-haspopup="true"
                                aria-label="account of current user"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-controls="menu-appbar"
                                  aria-haspopup="true"
                                  aria-label="account of current user"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <button
                                    aria-controls="menu-appbar"
                                    aria-haspopup="true"
                                    aria-label="account of current user"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(AccountCircleIcon)
                                        fontSize="large"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          fontSize="large"
                                        >
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                            fontSize="large"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeLarge"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(AccountCircleIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <WithStyles(ForwardRef(Menu))
                            anchorEl={null}
                            anchorOrigin={
                              Object {
                                "horizontal": "right",
                                "vertical": "bottom",
                              }
                            }
                            disableScrollLock={true}
                            elevation={0}
                            getContentAnchorEl={null}
                            id="menu-appbar"
                            keepMounted={true}
                            onClose={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "right",
                                "vertical": "top",
                              }
                            }
                          >
                            <ForwardRef(Menu)
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "right",
                                  "vertical": "bottom",
                                }
                              }
                              classes={
                                Object {
                                  "list": "MuiMenu-list",
                                  "paper": "MuiMenu-paper",
                                }
                              }
                              disableScrollLock={true}
                              elevation={0}
                              getContentAnchorEl={null}
                              id="menu-appbar"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "right",
                                  "vertical": "top",
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Popover))
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper",
                                    },
                                  }
                                }
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "right",
                                    "vertical": "bottom",
                                  }
                                }
                                disableScrollLock={true}
                                elevation={0}
                                getContentAnchorEl={null}
                                id="menu-appbar"
                                keepMounted={true}
                                onClose={[Function]}
                                onEntering={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "right",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <ForwardRef(Popover)
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "right",
                                      "vertical": "bottom",
                                    }
                                  }
                                  classes={
                                    Object {
                                      "paper": "MuiPopover-paper",
                                      "root": "MuiPopover-root",
                                    }
                                  }
                                  disableScrollLock={true}
                                  elevation={0}
                                  getContentAnchorEl={null}
                                  id="menu-appbar"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "right",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Modal)
                                    BackdropProps={
                                      Object {
                                        "invisible": true,
                                      }
                                    }
                                    className="MuiPopover-root"
                                    disableScrollLock={true}
                                    id="menu-appbar"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Portal)
                                      disablePortal={false}
                                    >
                                      <Portal
                                        containerInfo={
                                          <body>
                                            <div
                                              class="app"
                                              id="app"
                                            >
                                              <div
                                                class="makeStyles-root-1"
                                              >
                                                <div
                                                  class="makeStyles-root-6"
                                                >
                                                  <header
                                                    class="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                                                  >
                                                    <div
                                                      class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                                                    >
                                                      <h6
                                                        class="MuiTypography-root makeStyles-title-8 MuiTypography-h6 MuiTypography-noWrap"
                                                      >
                                                        Manga tracker
                                                      </h6>
                                                      <a
                                                        href="/"
                                                        style="text-decoration: none;"
                                                      >
                                                        <button
                                                          aria-controls="menu-appbar"
                                                          aria-label="return to home page"
                                                          class="MuiButtonBase-root MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                                          tabindex="0"
                                                          type="button"
                                                        >
                                                          <span
                                                            class="MuiIconButton-label"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </button>
                                                      </a>
                                                      <div
                                                        class="makeStyles-grow-7"
                                                      />
                                                      <div
                                                        aria-expanded="false"
                                                        class="MuiAutocomplete-root makeStyles-search-15 MuiAutocomplete-fullWidth MuiAutocomplete-hasClearIcon"
                                                        role="combobox"
                                                      >
                                                        <div
                                                          aria-label="Manga search"
                                                          class="MuiInputBase-root makeStyles-inputRoot-16 MuiInputBase-adornedEnd"
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            autocapitalize="none"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                                            id="title-search"
                                                            placeholder="Search manga"
                                                            spellcheck="false"
                                                            type="text"
                                                            value=""
                                                          />
                                                          <button
                                                            class="MuiButtonBase-root MuiIconButton-root"
                                                            tabindex="0"
                                                            type="button"
                                                          >
                                                            <span
                                                              class="MuiIconButton-label"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                />
                                                              </svg>
                                                            </span>
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </button>
                                                        </div>
                                                      </div>
                                                      <div
                                                        class="makeStyles-profileIcon-10"
                                                      >
                                                        <button
                                                          aria-controls="menu-appbar"
                                                          aria-haspopup="true"
                                                          aria-label="account of current user"
                                                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                                          tabindex="0"
                                                          type="button"
                                                        >
                                                          <span
                                                            class="MuiIconButton-label"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeLarge"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </button>
                                                      </div>
                                                    </div>
                                                  </header>
                                                </div>
                                                <div />
                                                <div
                                                  class="makeStyles-container-2"
                                                >
                                                  <footer
                                                    class="makeStyles-footer-4"
                                                  >
                                                    <hr
                                                      class="MuiDivider-root makeStyles-divider-3 MuiDivider-middle"
                                                    />
                                                    <p
                                                      class="MuiTypography-root makeStyles-copyright-5 MuiTypography-body1"
                                                    >
                                                      Copyright Â© 
                                                      <a
                                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
                                                        href="https://github.com/s0hv"
                                                      >
                                                        s0hv
                                                      </a>
                                                       
                                                      2020
                                                      .
                                                    </p>
                                                  </footer>
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              class="app"
                                              id="app"
                                            >
                                              <div
                                                class="makeStyles-root-1"
                                              >
                                                <div
                                                  class="makeStyles-root-6"
                                                >
                                                  <header
                                                    class="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                                                  >
                                                    <div
                                                      class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                                                    >
                                                      <h6
                                                        class="MuiTypography-root makeStyles-title-8 MuiTypography-h6 MuiTypography-noWrap"
                                                      >
                                                        Manga tracker
                                                      </h6>
                                                      <a
                                                        href="/"
                                                        style="text-decoration: none;"
                                                      >
                                                        <button
                                                          aria-controls="menu-appbar"
                                                          aria-label="return to home page"
                                                          class="MuiButtonBase-root MuiIconButton-root makeStyles-titleIcon-9 MuiIconButton-colorInherit"
                                                          tabindex="0"
                                                          type="button"
                                                        >
                                                          <span
                                                            class="MuiIconButton-label"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </button>
                                                      </a>
                                                      <div
                                                        class="makeStyles-grow-7"
                                                      />
                                                      <div
                                                        aria-expanded="false"
                                                        class="MuiAutocomplete-root makeStyles-search-15 MuiAutocomplete-fullWidth MuiAutocomplete-hasClearIcon"
                                                        role="combobox"
                                                      >
                                                        <div
                                                          aria-label="Manga search"
                                                          class="MuiInputBase-root makeStyles-inputRoot-16 MuiInputBase-adornedEnd"
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            autocapitalize="none"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input makeStyles-inputInput-17 MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd"
                                                            id="title-search"
                                                            placeholder="Search manga"
                                                            spellcheck="false"
                                                            type="text"
                                                            value=""
                                                          />
                                                          <button
                                                            class="MuiButtonBase-root MuiIconButton-root"
                                                            tabindex="0"
                                                            type="button"
                                                          >
                                                            <span
                                                              class="MuiIconButton-label"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                />
                                                              </svg>
                                                            </span>
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </button>
                                                        </div>
                                                      </div>
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-loginButton-11"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          Login
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                      <button
                                                        aria-label="Switch theme"
                                                        class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiIconButton-label"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
                                                            />
                                                          </svg>
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                    </div>
                                                  </header>
                                                </div>
                                                <div />
                                                <div
                                                  class="makeStyles-container-2"
                                                >
                                                  <footer
                                                    class="makeStyles-footer-4"
                                                  >
                                                    <hr
                                                      class="MuiDivider-root makeStyles-divider-3 MuiDivider-middle"
                                                    />
                                                    <p
                                                      class="MuiTypography-root makeStyles-copyright-5 MuiTypography-body1"
                                                    >
                                                      Copyright Â© 
                                                      <a
                                                        class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
                                                        href="https://github.com/s0hv"
                                                      >
                                                        s0hv
                                                      </a>
                                                       
                                                      2020
                                                      .
                                                    </p>
                                                  </footer>
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              aria-hidden="true"
                                              class="MuiPopover-root"
                                              id="menu-appbar"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation0 MuiPaper-rounded"
                                                style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <a
                                                    href="/profile"
                                                    style="text-decoration: none;"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                        />
                                                      </svg>
                                                       Profile
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </a>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
                                                      />
                                                    </svg>
                                                    Switch to 
                                                    dark
                                                     theme
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <a
                                                    href="/follows"
                                                    style="text-decoration: none;"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M19 18l2 1V3c0-1.1-.9-2-2-2H8.99C7.89 1 7 1.9 7 3h10c1.1 0 2 .9 2 2v13zM15 5H5c-1.1 0-2 .9-2 2v16l7-3 7 3V7c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                       Follows
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </a>
                                                  <a
                                                    href="/admin/services"
                                                    style="text-decoration: none;"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"
                                                        />
                                                      </svg>
                                                       Services
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </a>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                     Logout
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                          </body>
                                        }
                                      >
                                        <div
                                          className="MuiPopover-root"
                                          id="menu-appbar"
                                          onKeyDown={[Function]}
                                          role="presentation"
                                          style={
                                            Object {
                                              "bottom": 0,
                                              "left": 0,
                                              "position": "fixed",
                                              "right": 0,
                                              "top": 0,
                                              "visibility": "hidden",
                                              "zIndex": 1300,
                                            }
                                          }
                                        >
                                          <ForwardRef(SimpleBackdrop)
                                            invisible={true}
                                            onClick={[Function]}
                                            open={false}
                                          />
                                          <Unstable_TrapFocus
                                            disableAutoFocus={false}
                                            disableEnforceFocus={false}
                                            disableRestoreFocus={false}
                                            getDoc={[Function]}
                                            isEnabled={[Function]}
                                            open={false}
                                          >
                                            <div
                                              data-test="sentinelStart"
                                              tabIndex={0}
                                            />
                                            <ForwardRef(Grow)
                                              appear={true}
                                              in={false}
                                              onEnter={[Function]}
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              tabIndex="-1"
                                              timeout="auto"
                                            >
                                              <Transition
                                                addEndListener={[Function]}
                                                appear={true}
                                                enter={true}
                                                exit={true}
                                                in={false}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                tabIndex="-1"
                                                timeout={null}
                                                unmountOnExit={false}
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiPopover-paper"
                                                  classes={
                                                    Object {
                                                      "root": "MuiMenu-paper",
                                                    }
                                                  }
                                                  elevation={0}
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "transform": "scale(0.75, 0.5625)",
                                                      "visibility": "hidden",
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root MuiMenu-paper",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={0}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "transform": "scale(0.75, 0.5625)",
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation0 MuiPaper-rounded"
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "transform": "scale(0.75, 0.5625)",
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <ForwardRef(MenuList)
                                                        actions={
                                                          Object {
                                                            "current": Object {
                                                              "adjustStyleForScrollbar": [Function],
                                                            },
                                                          }
                                                        }
                                                        autoFocus={false}
                                                        autoFocusItem={false}
                                                        className="MuiMenu-list"
                                                        onKeyDown={[Function]}
                                                        variant="selectedMenu"
                                                      >
                                                        <WithStyles(ForwardRef(List))
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          role="menu"
                                                          tabIndex={-1}
                                                        >
                                                          <ForwardRef(List)
                                                            className="MuiMenu-list"
                                                            classes={
                                                              Object {
                                                                "dense": "MuiList-dense",
                                                                "padding": "MuiList-padding",
                                                                "root": "MuiList-root",
                                                                "subheader": "MuiList-subheader",
                                                              }
                                                            }
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ul
                                                              className="MuiList-root MuiMenu-list MuiList-padding"
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef
                                                                Component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "Naked": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "ListItemClasses": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "component": [Function],
                                                                        "dense": [Function],
                                                                        "disableGutters": [Function],
                                                                        "disabled": [Function],
                                                                        "role": [Function],
                                                                        "selected": [Function],
                                                                        "tabIndex": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    },
                                                                    "displayName": "WithStyles(ForwardRef(MenuItem))",
                                                                    "options": Object {
                                                                      "defaultTheme": Object {
                                                                        "breakpoints": Object {
                                                                          "between": [Function],
                                                                          "down": [Function],
                                                                          "keys": Array [
                                                                            "xs",
                                                                            "sm",
                                                                            "md",
                                                                            "lg",
                                                                            "xl",
                                                                          ],
                                                                          "only": [Function],
                                                                          "up": [Function],
                                                                          "values": Object {
                                                                            "lg": 1280,
                                                                            "md": 960,
                                                                            "sm": 600,
                                                                            "xl": 1920,
                                                                            "xs": 0,
                                                                          },
                                                                          "width": [Function],
                                                                        },
                                                                        "direction": "ltr",
                                                                        "mixins": Object {
                                                                          "gutters": [Function],
                                                                          "toolbar": Object {
                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                              "minHeight": 48,
                                                                            },
                                                                            "@media (min-width:600px)": Object {
                                                                              "minHeight": 64,
                                                                            },
                                                                            "minHeight": 56,
                                                                          },
                                                                        },
                                                                        "overrides": Object {},
                                                                        "palette": Object {
                                                                          "action": Object {
                                                                            "activatedOpacity": 0.12,
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                            "disabledOpacity": 0.38,
                                                                            "focus": "rgba(0, 0, 0, 0.12)",
                                                                            "focusOpacity": 0.12,
                                                                            "hover": "rgba(0, 0, 0, 0.04)",
                                                                            "hoverOpacity": 0.04,
                                                                            "selected": "rgba(0, 0, 0, 0.08)",
                                                                            "selectedOpacity": 0.08,
                                                                          },
                                                                          "augmentColor": [Function],
                                                                          "background": Object {
                                                                            "default": "#fafafa",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "common": Object {
                                                                            "black": "#000",
                                                                            "white": "#fff",
                                                                          },
                                                                          "contrastThreshold": 3,
                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                          "error": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#d32f2f",
                                                                            "light": "#e57373",
                                                                            "main": "#f44336",
                                                                          },
                                                                          "getContrastText": [Function],
                                                                          "grey": Object {
                                                                            "100": "#f5f5f5",
                                                                            "200": "#eeeeee",
                                                                            "300": "#e0e0e0",
                                                                            "400": "#bdbdbd",
                                                                            "50": "#fafafa",
                                                                            "500": "#9e9e9e",
                                                                            "600": "#757575",
                                                                            "700": "#616161",
                                                                            "800": "#424242",
                                                                            "900": "#212121",
                                                                            "A100": "#d5d5d5",
                                                                            "A200": "#aaaaaa",
                                                                            "A400": "#303030",
                                                                            "A700": "#616161",
                                                                          },
                                                                          "info": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1976d2",
                                                                            "light": "#64b5f6",
                                                                            "main": "#2196f3",
                                                                          },
                                                                          "primary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#303f9f",
                                                                            "light": "#7986cb",
                                                                            "main": "#3f51b5",
                                                                          },
                                                                          "secondary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#c51162",
                                                                            "light": "#ff4081",
                                                                            "main": "#f50057",
                                                                          },
                                                                          "success": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#388e3c",
                                                                            "light": "#81c784",
                                                                            "main": "#4caf50",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                          "tonalOffset": 0.2,
                                                                          "type": "light",
                                                                          "warning": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#f57c00",
                                                                            "light": "#ffb74d",
                                                                            "main": "#ff9800",
                                                                          },
                                                                        },
                                                                        "props": Object {},
                                                                        "shadows": Array [
                                                                          "none",
                                                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                        ],
                                                                        "shape": Object {
                                                                          "borderRadius": 4,
                                                                        },
                                                                        "spacing": [Function],
                                                                        "transitions": Object {
                                                                          "create": [Function],
                                                                          "duration": Object {
                                                                            "complex": 375,
                                                                            "enteringScreen": 225,
                                                                            "leavingScreen": 195,
                                                                            "short": 250,
                                                                            "shorter": 200,
                                                                            "shortest": 150,
                                                                            "standard": 300,
                                                                          },
                                                                          "easing": Object {
                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                          },
                                                                          "getAutoHeightDuration": [Function],
                                                                        },
                                                                        "typography": Object {
                                                                          "body1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.5,
                                                                          },
                                                                          "body2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.01071em",
                                                                            "lineHeight": 1.43,
                                                                          },
                                                                          "button": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.02857em",
                                                                            "lineHeight": 1.75,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "caption": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.03333em",
                                                                            "lineHeight": 1.66,
                                                                          },
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": 14,
                                                                          "fontWeightBold": 700,
                                                                          "fontWeightLight": 300,
                                                                          "fontWeightMedium": 500,
                                                                          "fontWeightRegular": 400,
                                                                          "h1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "6rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.01562em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3.75rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.00833em",
                                                                            "lineHeight": 1.2,
                                                                          },
                                                                          "h3": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h4": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "2.125rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00735em",
                                                                            "lineHeight": 1.235,
                                                                          },
                                                                          "h5": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.5rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.334,
                                                                          },
                                                                          "h6": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.25rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.0075em",
                                                                            "lineHeight": 1.6,
                                                                          },
                                                                          "htmlFontSize": 16,
                                                                          "overline": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.08333em",
                                                                            "lineHeight": 2.66,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "pxToRem": [Function],
                                                                          "round": [Function],
                                                                          "subtitle1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.75,
                                                                          },
                                                                          "subtitle2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.00714em",
                                                                            "lineHeight": 1.57,
                                                                          },
                                                                        },
                                                                        "zIndex": Object {
                                                                          "appBar": 1100,
                                                                          "drawer": 1200,
                                                                          "mobileStepper": 1000,
                                                                          "modal": 1300,
                                                                          "snackbar": 1400,
                                                                          "speedDial": 1050,
                                                                          "tooltip": 1500,
                                                                        },
                                                                      },
                                                                      "name": "MuiMenuItem",
                                                                    },
                                                                    "propTypes": Object {
                                                                      "classes": [Function],
                                                                      "innerRef": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                    "useStyles": [Function],
                                                                  }
                                                                }
                                                                href="/profile"
                                                                key=".$.0"
                                                                onClick={[Function]}
                                                                passHref={true}
                                                                prefetch={false}
                                                                tabIndex={0}
                                                              >
                                                                <Link
                                                                  href="/profile"
                                                                  passHref={true}
                                                                  prefetch={false}
                                                                >
                                                                  <a
                                                                    href="/profile"
                                                                    onClick={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "color": "inherit",
                                                                        "textDecoration": "none",
                                                                      }
                                                                    }
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      onClick={[Function]}
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <ForwardRef(PersonIcon)
                                                                                    className="makeStyles-menuItemIcon-13"
                                                                                    key=".0"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                                      className="makeStyles-menuItemIcon-13"
                                                                                    >
                                                                                      <ForwardRef(SvgIcon)
                                                                                        className="makeStyles-menuItemIcon-13"
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(PersonIcon)>
                                                                                   Profile
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef>
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                key=".$.1"
                                                                onClick={[Function]}
                                                              >
                                                                <ForwardRef(MenuItem)
                                                                  classes={
                                                                    Object {
                                                                      "dense": "MuiMenuItem-dense",
                                                                      "gutters": "MuiMenuItem-gutters",
                                                                      "root": "MuiMenuItem-root",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItem))
                                                                    button={true}
                                                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                      }
                                                                    }
                                                                    component="li"
                                                                    disableGutters={false}
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ForwardRef(ListItem)
                                                                      button={true}
                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                          "button": "MuiListItem-button",
                                                                          "container": "MuiListItem-container",
                                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                          "disabled": "Mui-disabled",
                                                                          "divider": "MuiListItem-divider",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "gutters": "MuiListItem-gutters",
                                                                          "root": "MuiListItem-root",
                                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                                          "selected": "Mui-selected",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        component="li"
                                                                        disabled={false}
                                                                        focusVisibleClassName="Mui-focusVisible"
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <ForwardRef(ButtonBase)
                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "focusVisible": "Mui-focusVisible",
                                                                              "root": "MuiButtonBase-root",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <li
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(Brightness3Icon)
                                                                              className="makeStyles-menuItemIcon-13"
                                                                              key=".0"
                                                                            >
                                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                                className="makeStyles-menuItemIcon-13"
                                                                              >
                                                                                <ForwardRef(SvgIcon)
                                                                                  className="makeStyles-menuItemIcon-13"
                                                                                  classes={
                                                                                    Object {
                                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                      "root": "MuiSvgIcon-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                                                    focusable="false"
                                                                                    viewBox="0 0 24 24"
                                                                                  >
                                                                                    <path
                                                                                      d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef(SvgIcon)>
                                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                                            </ForwardRef(Brightness3Icon)>
                                                                            Switch to 
                                                                            dark
                                                                             theme
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </li>
                                                                        </ForwardRef(ButtonBase)>
                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                    </ForwardRef(ListItem)>
                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                </ForwardRef(MenuItem)>
                                                              </WithStyles(ForwardRef(MenuItem))>
                                                              <ForwardRef
                                                                Component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "Naked": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "ListItemClasses": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "component": [Function],
                                                                        "dense": [Function],
                                                                        "disableGutters": [Function],
                                                                        "disabled": [Function],
                                                                        "role": [Function],
                                                                        "selected": [Function],
                                                                        "tabIndex": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    },
                                                                    "displayName": "WithStyles(ForwardRef(MenuItem))",
                                                                    "options": Object {
                                                                      "defaultTheme": Object {
                                                                        "breakpoints": Object {
                                                                          "between": [Function],
                                                                          "down": [Function],
                                                                          "keys": Array [
                                                                            "xs",
                                                                            "sm",
                                                                            "md",
                                                                            "lg",
                                                                            "xl",
                                                                          ],
                                                                          "only": [Function],
                                                                          "up": [Function],
                                                                          "values": Object {
                                                                            "lg": 1280,
                                                                            "md": 960,
                                                                            "sm": 600,
                                                                            "xl": 1920,
                                                                            "xs": 0,
                                                                          },
                                                                          "width": [Function],
                                                                        },
                                                                        "direction": "ltr",
                                                                        "mixins": Object {
                                                                          "gutters": [Function],
                                                                          "toolbar": Object {
                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                              "minHeight": 48,
                                                                            },
                                                                            "@media (min-width:600px)": Object {
                                                                              "minHeight": 64,
                                                                            },
                                                                            "minHeight": 56,
                                                                          },
                                                                        },
                                                                        "overrides": Object {},
                                                                        "palette": Object {
                                                                          "action": Object {
                                                                            "activatedOpacity": 0.12,
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                            "disabledOpacity": 0.38,
                                                                            "focus": "rgba(0, 0, 0, 0.12)",
                                                                            "focusOpacity": 0.12,
                                                                            "hover": "rgba(0, 0, 0, 0.04)",
                                                                            "hoverOpacity": 0.04,
                                                                            "selected": "rgba(0, 0, 0, 0.08)",
                                                                            "selectedOpacity": 0.08,
                                                                          },
                                                                          "augmentColor": [Function],
                                                                          "background": Object {
                                                                            "default": "#fafafa",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "common": Object {
                                                                            "black": "#000",
                                                                            "white": "#fff",
                                                                          },
                                                                          "contrastThreshold": 3,
                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                          "error": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#d32f2f",
                                                                            "light": "#e57373",
                                                                            "main": "#f44336",
                                                                          },
                                                                          "getContrastText": [Function],
                                                                          "grey": Object {
                                                                            "100": "#f5f5f5",
                                                                            "200": "#eeeeee",
                                                                            "300": "#e0e0e0",
                                                                            "400": "#bdbdbd",
                                                                            "50": "#fafafa",
                                                                            "500": "#9e9e9e",
                                                                            "600": "#757575",
                                                                            "700": "#616161",
                                                                            "800": "#424242",
                                                                            "900": "#212121",
                                                                            "A100": "#d5d5d5",
                                                                            "A200": "#aaaaaa",
                                                                            "A400": "#303030",
                                                                            "A700": "#616161",
                                                                          },
                                                                          "info": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1976d2",
                                                                            "light": "#64b5f6",
                                                                            "main": "#2196f3",
                                                                          },
                                                                          "primary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#303f9f",
                                                                            "light": "#7986cb",
                                                                            "main": "#3f51b5",
                                                                          },
                                                                          "secondary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#c51162",
                                                                            "light": "#ff4081",
                                                                            "main": "#f50057",
                                                                          },
                                                                          "success": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#388e3c",
                                                                            "light": "#81c784",
                                                                            "main": "#4caf50",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                          "tonalOffset": 0.2,
                                                                          "type": "light",
                                                                          "warning": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#f57c00",
                                                                            "light": "#ffb74d",
                                                                            "main": "#ff9800",
                                                                          },
                                                                        },
                                                                        "props": Object {},
                                                                        "shadows": Array [
                                                                          "none",
                                                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                        ],
                                                                        "shape": Object {
                                                                          "borderRadius": 4,
                                                                        },
                                                                        "spacing": [Function],
                                                                        "transitions": Object {
                                                                          "create": [Function],
                                                                          "duration": Object {
                                                                            "complex": 375,
                                                                            "enteringScreen": 225,
                                                                            "leavingScreen": 195,
                                                                            "short": 250,
                                                                            "shorter": 200,
                                                                            "shortest": 150,
                                                                            "standard": 300,
                                                                          },
                                                                          "easing": Object {
                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                          },
                                                                          "getAutoHeightDuration": [Function],
                                                                        },
                                                                        "typography": Object {
                                                                          "body1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.5,
                                                                          },
                                                                          "body2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.01071em",
                                                                            "lineHeight": 1.43,
                                                                          },
                                                                          "button": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.02857em",
                                                                            "lineHeight": 1.75,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "caption": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.03333em",
                                                                            "lineHeight": 1.66,
                                                                          },
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": 14,
                                                                          "fontWeightBold": 700,
                                                                          "fontWeightLight": 300,
                                                                          "fontWeightMedium": 500,
                                                                          "fontWeightRegular": 400,
                                                                          "h1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "6rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.01562em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3.75rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.00833em",
                                                                            "lineHeight": 1.2,
                                                                          },
                                                                          "h3": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h4": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "2.125rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00735em",
                                                                            "lineHeight": 1.235,
                                                                          },
                                                                          "h5": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.5rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.334,
                                                                          },
                                                                          "h6": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.25rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.0075em",
                                                                            "lineHeight": 1.6,
                                                                          },
                                                                          "htmlFontSize": 16,
                                                                          "overline": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.08333em",
                                                                            "lineHeight": 2.66,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "pxToRem": [Function],
                                                                          "round": [Function],
                                                                          "subtitle1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.75,
                                                                          },
                                                                          "subtitle2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.00714em",
                                                                            "lineHeight": 1.57,
                                                                          },
                                                                        },
                                                                        "zIndex": Object {
                                                                          "appBar": 1100,
                                                                          "drawer": 1200,
                                                                          "mobileStepper": 1000,
                                                                          "modal": 1300,
                                                                          "snackbar": 1400,
                                                                          "speedDial": 1050,
                                                                          "tooltip": 1500,
                                                                        },
                                                                      },
                                                                      "name": "MuiMenuItem",
                                                                    },
                                                                    "propTypes": Object {
                                                                      "classes": [Function],
                                                                      "innerRef": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                    "useStyles": [Function],
                                                                  }
                                                                }
                                                                href="/follows"
                                                                key=".$.2"
                                                                onClick={[Function]}
                                                                passHref={true}
                                                                prefetch={false}
                                                              >
                                                                <Link
                                                                  href="/follows"
                                                                  passHref={true}
                                                                  prefetch={false}
                                                                >
                                                                  <a
                                                                    href="/follows"
                                                                    onClick={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "color": "inherit",
                                                                        "textDecoration": "none",
                                                                      }
                                                                    }
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={-1}
                                                                                >
                                                                                  <ForwardRef(BookmarksIcon)
                                                                                    className="makeStyles-menuItemIcon-13"
                                                                                    key=".0"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                                      className="makeStyles-menuItemIcon-13"
                                                                                    >
                                                                                      <ForwardRef(SvgIcon)
                                                                                        className="makeStyles-menuItemIcon-13"
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 18l2 1V3c0-1.1-.9-2-2-2H8.99C7.89 1 7 1.9 7 3h10c1.1 0 2 .9 2 2v13zM15 5H5c-1.1 0-2 .9-2 2v16l7-3 7 3V7c0-1.1-.9-2-2-2z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(BookmarksIcon)>
                                                                                   Follows
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef>
                                                              <ForwardRef
                                                                Component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "Naked": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "ListItemClasses": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "component": [Function],
                                                                        "dense": [Function],
                                                                        "disableGutters": [Function],
                                                                        "disabled": [Function],
                                                                        "role": [Function],
                                                                        "selected": [Function],
                                                                        "tabIndex": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    },
                                                                    "displayName": "WithStyles(ForwardRef(MenuItem))",
                                                                    "options": Object {
                                                                      "defaultTheme": Object {
                                                                        "breakpoints": Object {
                                                                          "between": [Function],
                                                                          "down": [Function],
                                                                          "keys": Array [
                                                                            "xs",
                                                                            "sm",
                                                                            "md",
                                                                            "lg",
                                                                            "xl",
                                                                          ],
                                                                          "only": [Function],
                                                                          "up": [Function],
                                                                          "values": Object {
                                                                            "lg": 1280,
                                                                            "md": 960,
                                                                            "sm": 600,
                                                                            "xl": 1920,
                                                                            "xs": 0,
                                                                          },
                                                                          "width": [Function],
                                                                        },
                                                                        "direction": "ltr",
                                                                        "mixins": Object {
                                                                          "gutters": [Function],
                                                                          "toolbar": Object {
                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                              "minHeight": 48,
                                                                            },
                                                                            "@media (min-width:600px)": Object {
                                                                              "minHeight": 64,
                                                                            },
                                                                            "minHeight": 56,
                                                                          },
                                                                        },
                                                                        "overrides": Object {},
                                                                        "palette": Object {
                                                                          "action": Object {
                                                                            "activatedOpacity": 0.12,
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                            "disabledOpacity": 0.38,
                                                                            "focus": "rgba(0, 0, 0, 0.12)",
                                                                            "focusOpacity": 0.12,
                                                                            "hover": "rgba(0, 0, 0, 0.04)",
                                                                            "hoverOpacity": 0.04,
                                                                            "selected": "rgba(0, 0, 0, 0.08)",
                                                                            "selectedOpacity": 0.08,
                                                                          },
                                                                          "augmentColor": [Function],
                                                                          "background": Object {
                                                                            "default": "#fafafa",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "common": Object {
                                                                            "black": "#000",
                                                                            "white": "#fff",
                                                                          },
                                                                          "contrastThreshold": 3,
                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                          "error": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#d32f2f",
                                                                            "light": "#e57373",
                                                                            "main": "#f44336",
                                                                          },
                                                                          "getContrastText": [Function],
                                                                          "grey": Object {
                                                                            "100": "#f5f5f5",
                                                                            "200": "#eeeeee",
                                                                            "300": "#e0e0e0",
                                                                            "400": "#bdbdbd",
                                                                            "50": "#fafafa",
                                                                            "500": "#9e9e9e",
                                                                            "600": "#757575",
                                                                            "700": "#616161",
                                                                            "800": "#424242",
                                                                            "900": "#212121",
                                                                            "A100": "#d5d5d5",
                                                                            "A200": "#aaaaaa",
                                                                            "A400": "#303030",
                                                                            "A700": "#616161",
                                                                          },
                                                                          "info": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1976d2",
                                                                            "light": "#64b5f6",
                                                                            "main": "#2196f3",
                                                                          },
                                                                          "primary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#303f9f",
                                                                            "light": "#7986cb",
                                                                            "main": "#3f51b5",
                                                                          },
                                                                          "secondary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#c51162",
                                                                            "light": "#ff4081",
                                                                            "main": "#f50057",
                                                                          },
                                                                          "success": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#388e3c",
                                                                            "light": "#81c784",
                                                                            "main": "#4caf50",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                          "tonalOffset": 0.2,
                                                                          "type": "light",
                                                                          "warning": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#f57c00",
                                                                            "light": "#ffb74d",
                                                                            "main": "#ff9800",
                                                                          },
                                                                        },
                                                                        "props": Object {},
                                                                        "shadows": Array [
                                                                          "none",
                                                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                        ],
                                                                        "shape": Object {
                                                                          "borderRadius": 4,
                                                                        },
                                                                        "spacing": [Function],
                                                                        "transitions": Object {
                                                                          "create": [Function],
                                                                          "duration": Object {
                                                                            "complex": 375,
                                                                            "enteringScreen": 225,
                                                                            "leavingScreen": 195,
                                                                            "short": 250,
                                                                            "shorter": 200,
                                                                            "shortest": 150,
                                                                            "standard": 300,
                                                                          },
                                                                          "easing": Object {
                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                          },
                                                                          "getAutoHeightDuration": [Function],
                                                                        },
                                                                        "typography": Object {
                                                                          "body1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.5,
                                                                          },
                                                                          "body2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.01071em",
                                                                            "lineHeight": 1.43,
                                                                          },
                                                                          "button": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.02857em",
                                                                            "lineHeight": 1.75,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "caption": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.03333em",
                                                                            "lineHeight": 1.66,
                                                                          },
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": 14,
                                                                          "fontWeightBold": 700,
                                                                          "fontWeightLight": 300,
                                                                          "fontWeightMedium": 500,
                                                                          "fontWeightRegular": 400,
                                                                          "h1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "6rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.01562em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3.75rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.00833em",
                                                                            "lineHeight": 1.2,
                                                                          },
                                                                          "h3": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h4": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "2.125rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00735em",
                                                                            "lineHeight": 1.235,
                                                                          },
                                                                          "h5": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.5rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.334,
                                                                          },
                                                                          "h6": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.25rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.0075em",
                                                                            "lineHeight": 1.6,
                                                                          },
                                                                          "htmlFontSize": 16,
                                                                          "overline": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.08333em",
                                                                            "lineHeight": 2.66,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "pxToRem": [Function],
                                                                          "round": [Function],
                                                                          "subtitle1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.75,
                                                                          },
                                                                          "subtitle2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.00714em",
                                                                            "lineHeight": 1.57,
                                                                          },
                                                                        },
                                                                        "zIndex": Object {
                                                                          "appBar": 1100,
                                                                          "drawer": 1200,
                                                                          "mobileStepper": 1000,
                                                                          "modal": 1300,
                                                                          "snackbar": 1400,
                                                                          "speedDial": 1050,
                                                                          "tooltip": 1500,
                                                                        },
                                                                      },
                                                                      "name": "MuiMenuItem",
                                                                    },
                                                                    "propTypes": Object {
                                                                      "classes": [Function],
                                                                      "innerRef": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                    "useStyles": [Function],
                                                                  }
                                                                }
                                                                href="/admin/services"
                                                                key=".$.3"
                                                                onClick={[Function]}
                                                                passHref={true}
                                                                prefetch={false}
                                                              >
                                                                <Link
                                                                  href="/admin/services"
                                                                  passHref={true}
                                                                  prefetch={false}
                                                                >
                                                                  <a
                                                                    href="/admin/services"
                                                                    onClick={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "color": "inherit",
                                                                        "textDecoration": "none",
                                                                      }
                                                                    }
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={-1}
                                                                                >
                                                                                  <ForwardRef(ViewListIcon)
                                                                                    className="makeStyles-menuItemIcon-13"
                                                                                    key=".0"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                                      className="makeStyles-menuItemIcon-13"
                                                                                    >
                                                                                      <ForwardRef(SvgIcon)
                                                                                        className="makeStyles-menuItemIcon-13"
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(ViewListIcon)>
                                                                                   Services
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef>
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                key=".$.4"
                                                                onClick={[Function]}
                                                              >
                                                                <ForwardRef(MenuItem)
                                                                  classes={
                                                                    Object {
                                                                      "dense": "MuiMenuItem-dense",
                                                                      "gutters": "MuiMenuItem-gutters",
                                                                      "root": "MuiMenuItem-root",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItem))
                                                                    button={true}
                                                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                      }
                                                                    }
                                                                    component="li"
                                                                    disableGutters={false}
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ForwardRef(ListItem)
                                                                      button={true}
                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                          "button": "MuiListItem-button",
                                                                          "container": "MuiListItem-container",
                                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                          "disabled": "Mui-disabled",
                                                                          "divider": "MuiListItem-divider",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "gutters": "MuiListItem-gutters",
                                                                          "root": "MuiListItem-root",
                                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                                          "selected": "Mui-selected",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        component="li"
                                                                        disabled={false}
                                                                        focusVisibleClassName="Mui-focusVisible"
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <ForwardRef(ButtonBase)
                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "focusVisible": "Mui-focusVisible",
                                                                              "root": "MuiButtonBase-root",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <li
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(ExitToAppIcon)
                                                                              className="makeStyles-menuItemIcon-13"
                                                                              key=".0"
                                                                            >
                                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                                className="makeStyles-menuItemIcon-13"
                                                                              >
                                                                                <ForwardRef(SvgIcon)
                                                                                  className="makeStyles-menuItemIcon-13"
                                                                                  classes={
                                                                                    Object {
                                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                      "root": "MuiSvgIcon-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="MuiSvgIcon-root makeStyles-menuItemIcon-13"
                                                                                    focusable="false"
                                                                                    viewBox="0 0 24 24"
                                                                                  >
                                                                                    <path
                                                                                      d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef(SvgIcon)>
                                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                                            </ForwardRef(ExitToAppIcon)>
                                                                             Logout
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </li>
                                                                        </ForwardRef(ButtonBase)>
                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                    </ForwardRef(ListItem)>
                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                </ForwardRef(MenuItem)>
                                                              </WithStyles(ForwardRef(MenuItem))>
                                                            </ul>
                                                          </ForwardRef(List)>
                                                        </WithStyles(ForwardRef(List))>
                                                      </ForwardRef(MenuList)>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </Transition>
                                            </ForwardRef(Grow)>
                                            <div
                                              data-test="sentinelEnd"
                                              tabIndex={0}
                                            />
                                          </Unstable_TrapFocus>
                                        </div>
                                      </Portal>
                                    </ForwardRef(Portal)>
                                  </ForwardRef(Modal)>
                                </ForwardRef(Popover)>
                              </WithStyles(ForwardRef(Popover))>
                            </ForwardRef(Menu)>
                          </WithStyles(ForwardRef(Menu))>
                        </div>
                      </div>
                    </ForwardRef(Toolbar)>
                  </WithStyles(ForwardRef(Toolbar))>
                </header>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </ForwardRef(AppBar)>
        </WithStyles(ForwardRef(AppBar))>
      </div>
    </TopBar>
    <DummyComponent>
      <div />
    </DummyComponent>
    <div
      className="makeStyles-container-2"
    >
      <footer
        className="makeStyles-footer-4"
      >
        <WithStyles(ForwardRef(Divider))
          className="makeStyles-divider-3"
          variant="middle"
        >
          <ForwardRef(Divider)
            className="makeStyles-divider-3"
            classes={
              Object {
                "absolute": "MuiDivider-absolute",
                "flexItem": "MuiDivider-flexItem",
                "inset": "MuiDivider-inset",
                "light": "MuiDivider-light",
                "middle": "MuiDivider-middle",
                "root": "MuiDivider-root",
                "vertical": "MuiDivider-vertical",
              }
            }
            variant="middle"
          >
            <hr
              className="MuiDivider-root makeStyles-divider-3 MuiDivider-middle"
            />
          </ForwardRef(Divider)>
        </WithStyles(ForwardRef(Divider))>
        <Copyright
          className="makeStyles-copyright-5"
        >
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-copyright-5"
          >
            <ForwardRef(Typography)
              className="makeStyles-copyright-5"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-copyright-5 MuiTypography-body1"
              >
                Copyright Â© 
                <WithStyles(ForwardRef(Link))
                  color="inherit"
                  href="https://github.com/s0hv"
                >
                  <ForwardRef(Link)
                    classes={
                      Object {
                        "button": "MuiLink-button",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiLink-root",
                        "underlineAlways": "MuiLink-underlineAlways",
                        "underlineHover": "MuiLink-underlineHover",
                        "underlineNone": "MuiLink-underlineNone",
                      }
                    }
                    color="inherit"
                    href="https://github.com/s0hv"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiLink-root MuiLink-underlineHover"
                      color="inherit"
                      component="a"
                      href="https://github.com/s0hv"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      variant="inherit"
                    >
                      <ForwardRef(Typography)
                        className="MuiLink-root MuiLink-underlineHover"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="inherit"
                        component="a"
                        href="https://github.com/s0hv"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        variant="inherit"
                      >
                        <a
                          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
                          href="https://github.com/s0hv"
                          onBlur={[Function]}
                          onFocus={[Function]}
                        >
                          s0hv
                        </a>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </ForwardRef(Link)>
                </WithStyles(ForwardRef(Link))>
                 
                2020
                .
              </p>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </Copyright>
      </footer>
    </div>
  </div>
</Layout>
`;
